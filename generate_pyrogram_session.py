#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π —Å–µ—Å—Å–∏–∏ Pyrogram.
–≠—Ç–∞ —Å–µ—Å—Å–∏—è –ø–æ–∑–≤–æ–ª–∏—Ç —á–∏—Ç–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –ø—É–±–ª–∏—á–Ω—ã—Ö –∫–∞–Ω–∞–ª–æ–≤.
"""

import asyncio
from pyrogram import Client
import os
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

API_ID = os.getenv('TELEGRAM_API_ID')
API_HASH = os.getenv('TELEGRAM_API_HASH')

if not API_ID or not API_HASH:
    print("‚ùå –û—à–∏–±–∫–∞: TELEGRAM_API_ID –∏ TELEGRAM_API_HASH –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤ .env —Ñ–∞–π–ª–µ")
    exit(1)

async def generate_pyrogram_session():
    print("üîê –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π —Å–µ—Å—Å–∏–∏ Pyrogram")
    print("üì± –í–∞–º –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –∏ –∫–æ–¥ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è")
    print()
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç —Å –≤—Ä–µ–º–µ–Ω–Ω–æ–π —Å–µ—Å—Å–∏–µ–π
    client = Client(":memory:", api_id=int(API_ID), api_hash=API_HASH)
    
    try:
        await client.start()
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
        me = await client.get_me()
        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –∫–∞–∫: {me.first_name} {me.last_name or ''} (@{me.username or '–±–µ–∑ username'})")
        
        if me.is_bot:
            print("‚ùå –û—à–∏–±–∫–∞: –≠—Ç–æ bot-–∞–∫–∫–∞—É–Ω—Ç. –ù—É–∂–µ–Ω –æ–±—ã—á–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∞–∫–∫–∞—É–Ω—Ç.")
            return
        
        # –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä–æ–∫—É —Å–µ—Å—Å–∏–∏
        session_string = await client.export_session_string()
        
        print()
        print("üéâ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è —Å–µ—Å—Å–∏—è Pyrogram —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!")
        print()
        print("üìã –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —ç—Ç—É —Å—Ç—Ä–æ–∫—É —Å–µ—Å—Å–∏–∏ –≤ –≤–∞—à .env —Ñ–∞–π–ª:")
        print(f"TELEGRAM_SESSION_STRING={session_string}")
        print()
        print("‚ö†Ô∏è  –í–ê–ñ–ù–û: –≠—Ç–∞ —Å–µ—Å—Å–∏—è –¥–∞–µ—Ç –ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ –≤–∞—à–µ–º—É Telegram –∞–∫–∫–∞—É–Ω—Ç—É.")
        print("   –•—Ä–∞–Ω–∏—Ç–µ –µ—ë –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∏ –Ω–µ –ø–µ—Ä–µ–¥–∞–≤–∞–π—Ç–µ —Ç—Ä–µ—Ç—å–∏–º –ª–∏—Ü–∞–º.")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ —Ñ–∞–π–ª
        with open('pyrogram_session_string.txt', 'w') as f:
            f.write(session_string)
        print(f"üìÅ –°–µ—Å—Å–∏—è —Ç–∞–∫–∂–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ —Ñ–∞–π–ª: pyrogram_session_string.txt")
        
        return session_string
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Å–µ—Å—Å–∏–∏: {e}")
        return None
    finally:
        await client.stop()

if __name__ == '__main__':
    asyncio.run(generate_pyrogram_session())